Search.setIndex({"docnames": ["changelog", "configuration", "datacheck", "index", "modules", "quick_start"], "filenames": ["changelog.rst", "configuration.md", "datacheck.rst", "index.rst", "modules.rst", "quick_start.md"], "titles": ["CHANGELOG", "Configuration", "datacheck package", "Datacheck ", "datacheck", "Quick Start"], "terms": {"thi": [0, 1, 2, 5], "file": [0, 5], "i": [0, 1, 2, 3, 5], "us": [0, 2, 5], "list": [0, 1, 2], "chang": [0, 5], "made": 0, "each": [0, 2], "version": [0, 5], "add": 0, "method": [0, 2], "support": [0, 1, 2, 3, 5], "comput": [0, 1, 2, 3, 5], "stat": 0, "numer": [0, 1, 2, 3, 5], "date": [0, 1, 2, 3, 5], "data": [0, 1, 2, 3, 5], "check": [0, 1, 2, 3, 4, 5], "column": [0, 1, 2, 3, 5], "type": [0, 1, 2, 3, 5], "miss": [0, 1, 2, 3, 5], "rate": [0, 1, 2, 3, 5], "duplic": [0, 1, 2, 3, 5], "coroutin": [0, 2, 5], "execut": [0, 2], "multi": [0, 5], "config": [0, 2, 5], "fix": 0, "issu": 0, "caus": 0, "upper": 0, "name": [0, 1, 2, 3, 4, 5], "snowflak": [0, 2], "normal": 0, "valu": [0, 1, 2, 3, 5], "var_nam": 0, "lowercas": [0, 2], "run": [0, 2, 3, 4, 5], "get_pandas_df": [0, 2, 3, 4], "first": [0, 5], "The": [1, 2, 5], "main": 1, "function": [1, 2], "program": [1, 2, 5], "datacheck": [1, 5], "multi_check": [1, 2, 3, 4, 5], "requir": [1, 5], "input": [1, 2], "json": [1, 2, 5], "like": [1, 5], "below": [1, 5], "target_t": [1, 5], "databas": [1, 2, 3, 4, 5], "vega": [1, 2, 5], "red": [1, 5], "raw_c_e_consumer_profile_chang": [1, 5], "source_t": [1, 5], "redshift": [1, 2, 5], "filter": [1, 2, 3, 5], "time_col": [1, 5], "par_process_d": [1, 5], "start": 1, "2022": [1, 5], "10": [1, 5], "01": [1, 5], "end": [1, 5], "02": [1, 5], "op": [1, 5], "check_column_typ": [1, 5], "count_row_num": [1, 2, 5], "count_distinct_num": [1, 2, 5], "target_col": [1, 2, 5], "event_typ": [1, 5], "device_id": [1, 5], "compute_stat": [1, 2, 5], "gateway_respons": [1, 5], "gdp_processed_datetim": [1, 5], "event_info_correlation_id": [1, 5], "target_op": [1, 2, 5], "max": [1, 2, 3, 5], "min": [1, 3, 5], "avg": [1, 3, 5], "sum": [1, 3, 5], "count_missing_r": [1, 2, 5], "check_dupl": [1, 2, 5], "item": 1, "target": [1, 2], "migrat": 1, "tabl": [1, 2, 5], "schema": 1, "option": [1, 2, 5], "sampl": [1, 2, 3, 5], "time": [1, 2, 3, 5], "oper": [1, 2, 5], "If": [1, 2, 5], "you": [1, 5], "do": [1, 5], "fill": 1, "ani": 1, "just": [1, 2], "its": 1, "default": [1, 2], "need": [1, 2], "count": [1, 2, 3, 5], "number": [1, 2, 3, 5], "row": [1, 2, 3, 5], "distinct": [1, 2, 3, 5], "want": 1, "all": [1, 2], "given": [1, 3, 5], "kei": [1, 3, 5], "entir": 1, "statist": [1, 2], "now": 1, "class": 2, "threadpool": [2, 3, 4], "max_work": 2, "int": 2, "object": 2, "A": [2, 5], "thread": [2, 5], "pool": 2, "semaphor": 2, "limit": 2, "async": 2, "_callabl": 2, "callabl": 2, "arg": 2, "kwarg": 2, "futur": 2, "paramet": 2, "return": 2, "asyncio": 2, "threadwork": [2, 3, 4], "decor": 2, "convert": 2, "in_notebook": [2, 3, 4], "bool": 2, "current": 2, "script": 2, "jupyt": 2, "notebook": 2, "true": 2, "run_with_coro": [2, 3, 4], "loop": 2, "abstracteventloop": 2, "func": 2, "param": [2, 5], "dict": 2, "n_job": [2, 5], "2": [2, 3, 5], "timeout": [2, 5], "float": 2, "60": [2, 5], "retri": [2, 5], "1": [2, 3, 5], "concurrent": 2, "event": 2, "runtim": 2, "per": 2, "trigger": 2, "result": 2, "gener": [2, 3, 4, 5], "aptredshiftconnector": [2, 3, 4, 5], "hook": [2, 3, 4], "connector": [2, 3, 4], "properti": 2, "str": 2, "command": [2, 5], "panda": 2, "datafram": 2, "from": [2, 3, 5], "sql": 2, "queri": 2, "none": 2, "airflowconnector": [2, 3, 4], "conn_id": [2, 3, 4], "id": 2, "autocommit": 2, "abc": 2, "abstract": 2, "an": 2, "provid": [2, 3, 5], "conduct": 2, "valid": [2, 3, 5], "locat": 2, "perform": 2, "pars": 2, "preprocess": 2, "configur": 2, "default_op": [2, 3, 4], "get_connector": [2, 3, 4], "get": [2, 3], "0": [2, 3, 5], "user": [2, 5], "permiss": 2, "side": 2, "one": 2, "when": 2, "static": 2, "none_dataframe_with_tim": [2, 3, 4], "blank": 2, "contain": 2, "accord": 2, "register_connector": [2, 3, 4, 5], "regist": 2, "previous": 2, "ar": [2, 5], "supported_databas": [2, 3, 4], "set": [2, 5], "checkdupl": [2, 3, 4], "sqlgener": [2, 3, 4], "inherit": 2, "_tabl": 2, "instanc": 2, "computestat": [2, 3, 4], "countdistinctnum": [2, 3, 4], "countmissingr": [2, 3, 4], "countrownum": [2, 3, 4], "createfilteredtmpt": [2, 3, 4], "logic": [2, 3, 5], "creat": [2, 3], "temp": 2, "mixin": 2, "differ": [2, 3, 5], "filter_col": [2, 3, 4], "filter_typ": 2, "applic": 2, "implement": 2, "children": 2, "sql_templat": [2, 3, 4], "templat": 2, "sql_template_root": [2, 3, 4], "root": 2, "path": 2, "get_sql_generator_by_nam": [2, 3, 4], "includ": 2, "create_filtered_tmp_t": 2, "classify_column_typ": [2, 3, 4], "col_typ": 2, "classifi": 2, "categor": 2, "string": 2, "three": 2, "choic": 2, "categori": 2, "combine_sql_script": [2, 3, 4], "sql_script_acc": 2, "combin": 2, "singl": [2, 5], "df_equal": [2, 3, 4], "df1": 2, "df2": 2, "col": 2, "two": [2, 3, 5], "thei": [2, 5], "equal": 2, "sourc": [2, 3, 5], "boolean": 2, "generate_sql_from_templ": [2, 3, 4], "keyword": 2, "argument": 2, "generate_union_all_sql_script": [2, 3, 4], "union": 2, "load_json": [2, 3, 4], "": [2, 3, 5], "covert": 2, "tool": [3, 5], "consist": [3, 5], "follow": [3, 5], "featur": [3, 5], "non": [3, 5], "full": [3, 5], "base": [3, 4, 5], "match": [3, 5], "exist": [3, 5], "record": [3, 5], "wip": [3, 5], "detail": [3, 5], "introduct": 3, "instal": 3, "jupyterhub": 3, "solut": 3, "ddf": 3, "packag": [3, 4, 5], "async_util": [3, 4], "modul": [3, 4], "connect": [3, 4, 5], "sql_gener": [3, 4], "util": [3, 4], "exampl": [3, 5], "explan": 3, "changelog": 3, "v0": 3, "3": [3, 5], "improv": 3, "index": 3, "search": 3, "page": 3, "quickstart": 5, "guid": 5, "design": 5, "up": 5, "project": 5, "snap": 5, "along": 5, "wai": 5, "better": 5, "understand": 5, "how": 5, "hand": 5, "app": 5, "find": 5, "more": 5, "resourc": 5, "deep": 5, "dive": 5, "step": 5, "report": 5, "It": 5, "recommend": 5, "virtual": 5, "environ": 5, "virtualenv": 5, "so": 5, "problem": 5, "depend": 5, "could": 5, "address": 5, "anaconda": 5, "new": 5, "conda": 5, "n": 5, "python": 5, "7": 5, "activ": 5, "els": 5, "python3": 5, "m": 5, "venv": 5, "env": 5, "cd": 5, "bin": 5, "repositori": 5, "remot": 5, "There": 5, "have": 5, "alreadi": 5, "secur": 5, "enabl": 5, "factor": 5, "authentif": 5, "ssh": 5, "git": 5, "clone": 5, "suffic": 5, "github": 5, "com": 5, "sparkl": 5, "apt": 5, "otherwis": 5, "can": 5, "directli": 5, "download": 5, "zip": 5, "unzip": 5, "local": 5, "directori": 5, "pip": 5, "r": 5, "txt": 5, "setup": 5, "py": 5, "tell": 5, "which": 5, "should": 5, "what": 5, "simpl": 5, "inform": 5, "here": 5, "pleas": 5, "instruct": 5, "learn": 5, "usag": 5, "import": 5, "redshifthook": 5, "cluster": 5, "okta_usernam": 5, "xxx": 5, "squareup": 5, "dc": 5, "vega_connector": 5, "load": 5, "sandbox_analytics_au": 5, "jy_seon_process": 5, "df": 5, "speed": 5, "print": 5, "head": 5, "airflow": 5, "task": 5, "companion": 5}, "objects": {"datacheck": [[2, 0, 0, "-", "async_utils"], [2, 0, 0, "-", "base"], [2, 0, 0, "-", "connection"], [2, 0, 0, "-", "datachecker"], [2, 0, 0, "-", "sql_generator"], [2, 0, 0, "-", "utils"]], "datacheck.async_utils": [[2, 1, 1, "", "ThreadPool"], [2, 1, 1, "", "ThreadWorker"], [2, 3, 1, "", "in_notebook"], [2, 3, 1, "", "run_with_coro"]], "datacheck.async_utils.ThreadPool": [[2, 2, 1, "", "run"]], "datacheck.connection": [[2, 1, 1, "", "APTRedshiftConnector"], [2, 1, 1, "", "AirflowConnector"], [2, 1, 1, "", "Connector"]], "datacheck.connection.APTRedshiftConnector": [[2, 4, 1, "", "database"], [2, 2, 1, "", "get_pandas_df"], [2, 4, 1, "", "hook"], [2, 2, 1, "", "run"]], "datacheck.connection.AirflowConnector": [[2, 4, 1, "", "conn_id"], [2, 4, 1, "", "connection"], [2, 4, 1, "", "database"], [2, 2, 1, "", "get_pandas_df"], [2, 4, 1, "", "hook"], [2, 2, 1, "", "run"]], "datacheck.connection.Connector": [[2, 2, 1, "", "get_pandas_df"], [2, 2, 1, "", "run"]], "datacheck.datachecker": [[2, 1, 1, "", "DataChecker"]], "datacheck.datachecker.DataChecker": [[2, 2, 1, "", "check"], [2, 4, 1, "", "default_ops"], [2, 2, 1, "", "get_connector"], [2, 2, 1, "", "multi_check"], [2, 2, 1, "", "none_dataframe_with_time"], [2, 2, 1, "", "register_connector"], [2, 4, 1, "", "supported_database"]], "datacheck.sql_generator": [[2, 1, 1, "", "CheckDuplicate"], [2, 1, 1, "", "ComputeStats"], [2, 1, 1, "", "CountDistinctNum"], [2, 1, 1, "", "CountMissingRate"], [2, 1, 1, "", "CountRowNum"], [2, 1, 1, "", "CreateFilteredTmpTable"], [2, 1, 1, "", "SqlGenerator"], [2, 3, 1, "", "get_sql_generator_by_name"]], "datacheck.sql_generator.CheckDuplicate": [[2, 2, 1, "", "generate"]], "datacheck.sql_generator.ComputeStats": [[2, 2, 1, "", "generate"]], "datacheck.sql_generator.CountDistinctNum": [[2, 2, 1, "", "generate"]], "datacheck.sql_generator.CountMissingRate": [[2, 2, 1, "", "generate"]], "datacheck.sql_generator.CountRowNum": [[2, 2, 1, "", "generate"]], "datacheck.sql_generator.CreateFilteredTmpTable": [[2, 2, 1, "", "generate"]], "datacheck.sql_generator.SqlGenerator": [[2, 2, 1, "", "filter_col"], [2, 2, 1, "", "generate"], [2, 4, 1, "", "name"], [2, 4, 1, "", "sql_template"], [2, 4, 1, "", "sql_template_root"]], "datacheck.utils": [[2, 3, 1, "", "classify_column_type"], [2, 3, 1, "", "combine_sql_script"], [2, 3, 1, "", "df_equals"], [2, 3, 1, "", "generate_sql_from_template"], [2, 3, 1, "", "generate_union_all_sql_script"], [2, 3, 1, "", "load_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"changelog": 0, "v0": 0, "1": 0, "3": 0, "featur": 0, "2": 0, "improv": 0, "0": 0, "configur": [1, 3, 5], "exampl": 1, "explan": 1, "datacheck": [2, 3, 4], "packag": 2, "async_util": 2, "modul": 2, "base": 2, "connect": 2, "sql_gener": 2, "util": 2, "quick": [3, 5], "start": [3, 5], "api": [3, 5], "appendix": 3, "indic": 3, "tabl": 3, "introduct": 5, "instal": 5, "get": 5, "creat": 5, "jupyterhub": 5, "solut": 5, "ddf": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"CHANGELOG": [[0, "changelog"]], "v0.1.3": [[0, "v0-1-3"]], "Features": [[0, "features"], [0, "id1"]], "v0.1.2": [[0, "v0-1-2"]], "Improvement": [[0, "improvement"], [0, "id2"]], "v0.1.1": [[0, "v0-1-1"]], "v0.1.0": [[0, "v0-1-0"]], "Configuration": [[1, "configuration"], [3, null]], "Example": [[1, "example"]], "Explanation": [[1, "explanation"]], "Datacheck ": [[3, "datacheck-version"]], "Quick Start": [[3, null], [5, "quick-start"]], "API": [[3, null]], "Appendix": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "datacheck": [[4, "datacheck"]], "Introduction": [[5, "introduction"]], "Installation": [[5, "installation"]], "Getting Started": [[5, "getting-started"]], "Create the configuration": [[5, "create-the-configuration"]], "Jupyterhub Solution API": [[5, "jupyterhub-solution-api"]], "DDF Solution API": [[5, "ddf-solution-api"]], "datacheck package": [[2, "datacheck-package"]], "datacheck.async_utils module": [[2, "module-datacheck.async_utils"]], "datacheck.base module": [[2, "module-datacheck.base"]], "datacheck.connection module": [[2, "module-datacheck.connection"]], "datacheck.datachecker module": [[2, "module-datacheck.datachecker"]], "datacheck.sql_generator module": [[2, "module-datacheck.sql_generator"]], "datacheck.utils module": [[2, "module-datacheck.utils"]]}, "indexentries": {"aptredshiftconnector (class in datacheck.connection)": [[2, "datacheck.connection.APTRedshiftConnector"]], "airflowconnector (class in datacheck.connection)": [[2, "datacheck.connection.AirflowConnector"]], "checkduplicate (class in datacheck.sql_generator)": [[2, "datacheck.sql_generator.CheckDuplicate"]], "computestats (class in datacheck.sql_generator)": [[2, "datacheck.sql_generator.ComputeStats"]], "connector (class in datacheck.connection)": [[2, "datacheck.connection.Connector"]], "countdistinctnum (class in datacheck.sql_generator)": [[2, "datacheck.sql_generator.CountDistinctNum"]], "countmissingrate (class in datacheck.sql_generator)": [[2, "datacheck.sql_generator.CountMissingRate"]], "countrownum (class in datacheck.sql_generator)": [[2, "datacheck.sql_generator.CountRowNum"]], "createfilteredtmptable (class in datacheck.sql_generator)": [[2, "datacheck.sql_generator.CreateFilteredTmpTable"]], "datachecker (class in datacheck.datachecker)": [[2, "datacheck.datachecker.DataChecker"]], "sqlgenerator (class in datacheck.sql_generator)": [[2, "datacheck.sql_generator.SqlGenerator"]], "threadpool (class in datacheck.async_utils)": [[2, "datacheck.async_utils.ThreadPool"]], "threadworker (class in datacheck.async_utils)": [[2, "datacheck.async_utils.ThreadWorker"]], "check() (datacheck.datachecker.datachecker method)": [[2, "datacheck.datachecker.DataChecker.check"]], "classify_column_type() (in module datacheck.utils)": [[2, "datacheck.utils.classify_column_type"]], "combine_sql_script() (in module datacheck.utils)": [[2, "datacheck.utils.combine_sql_script"]], "conn_id (datacheck.connection.airflowconnector property)": [[2, "datacheck.connection.AirflowConnector.conn_id"]], "connection (datacheck.connection.airflowconnector property)": [[2, "datacheck.connection.AirflowConnector.connection"]], "database (datacheck.connection.aptredshiftconnector property)": [[2, "datacheck.connection.APTRedshiftConnector.database"]], "database (datacheck.connection.airflowconnector property)": [[2, "datacheck.connection.AirflowConnector.database"]], "datacheck.async_utils": [[2, "module-datacheck.async_utils"]], "datacheck.base": [[2, "module-datacheck.base"]], "datacheck.connection": [[2, "module-datacheck.connection"]], "datacheck.datachecker": [[2, "module-datacheck.datachecker"]], "datacheck.sql_generator": [[2, "module-datacheck.sql_generator"]], "datacheck.utils": [[2, "module-datacheck.utils"]], "default_ops (datacheck.datachecker.datachecker property)": [[2, "datacheck.datachecker.DataChecker.default_ops"]], "df_equals() (in module datacheck.utils)": [[2, "datacheck.utils.df_equals"]], "filter_col() (datacheck.sql_generator.sqlgenerator method)": [[2, "datacheck.sql_generator.SqlGenerator.filter_col"]], "generate() (datacheck.sql_generator.checkduplicate method)": [[2, "datacheck.sql_generator.CheckDuplicate.generate"]], "generate() (datacheck.sql_generator.computestats method)": [[2, "datacheck.sql_generator.ComputeStats.generate"]], "generate() (datacheck.sql_generator.countdistinctnum method)": [[2, "datacheck.sql_generator.CountDistinctNum.generate"]], "generate() (datacheck.sql_generator.countmissingrate method)": [[2, "datacheck.sql_generator.CountMissingRate.generate"]], "generate() (datacheck.sql_generator.countrownum method)": [[2, "datacheck.sql_generator.CountRowNum.generate"]], "generate() (datacheck.sql_generator.createfilteredtmptable method)": [[2, "datacheck.sql_generator.CreateFilteredTmpTable.generate"]], "generate() (datacheck.sql_generator.sqlgenerator method)": [[2, "datacheck.sql_generator.SqlGenerator.generate"]], "generate_sql_from_template() (in module datacheck.utils)": [[2, "datacheck.utils.generate_sql_from_template"]], "generate_union_all_sql_script() (in module datacheck.utils)": [[2, "datacheck.utils.generate_union_all_sql_script"]], "get_connector() (datacheck.datachecker.datachecker method)": [[2, "datacheck.datachecker.DataChecker.get_connector"]], "get_pandas_df() (datacheck.connection.aptredshiftconnector method)": [[2, "datacheck.connection.APTRedshiftConnector.get_pandas_df"]], "get_pandas_df() (datacheck.connection.airflowconnector method)": [[2, "datacheck.connection.AirflowConnector.get_pandas_df"]], "get_pandas_df() (datacheck.connection.connector method)": [[2, "datacheck.connection.Connector.get_pandas_df"]], "get_sql_generator_by_name() (in module datacheck.sql_generator)": [[2, "datacheck.sql_generator.get_sql_generator_by_name"]], "hook (datacheck.connection.aptredshiftconnector property)": [[2, "datacheck.connection.APTRedshiftConnector.hook"]], "hook (datacheck.connection.airflowconnector property)": [[2, "datacheck.connection.AirflowConnector.hook"]], "in_notebook() (in module datacheck.async_utils)": [[2, "datacheck.async_utils.in_notebook"]], "load_json() (in module datacheck.utils)": [[2, "datacheck.utils.load_json"]], "module": [[2, "module-datacheck.async_utils"], [2, "module-datacheck.base"], [2, "module-datacheck.connection"], [2, "module-datacheck.datachecker"], [2, "module-datacheck.sql_generator"], [2, "module-datacheck.utils"]], "multi_check() (datacheck.datachecker.datachecker method)": [[2, "datacheck.datachecker.DataChecker.multi_check"]], "name (datacheck.sql_generator.sqlgenerator property)": [[2, "datacheck.sql_generator.SqlGenerator.name"]], "none_dataframe_with_time() (datacheck.datachecker.datachecker static method)": [[2, "datacheck.datachecker.DataChecker.none_dataframe_with_time"]], "register_connector() (datacheck.datachecker.datachecker method)": [[2, "datacheck.datachecker.DataChecker.register_connector"]], "run() (datacheck.async_utils.threadpool method)": [[2, "datacheck.async_utils.ThreadPool.run"]], "run() (datacheck.connection.aptredshiftconnector method)": [[2, "datacheck.connection.APTRedshiftConnector.run"]], "run() (datacheck.connection.airflowconnector method)": [[2, "datacheck.connection.AirflowConnector.run"]], "run() (datacheck.connection.connector method)": [[2, "datacheck.connection.Connector.run"]], "run_with_coro() (in module datacheck.async_utils)": [[2, "datacheck.async_utils.run_with_coro"]], "sql_template (datacheck.sql_generator.sqlgenerator property)": [[2, "datacheck.sql_generator.SqlGenerator.sql_template"]], "sql_template_root (datacheck.sql_generator.sqlgenerator property)": [[2, "datacheck.sql_generator.SqlGenerator.sql_template_root"]], "supported_database (datacheck.datachecker.datachecker property)": [[2, "datacheck.datachecker.DataChecker.supported_database"]]}})
